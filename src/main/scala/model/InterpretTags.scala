package model

import scala.annotation.targetName

import model.AuxTypes.MessageId
import model.NoticeType.*
import model.Tags.*

import type_classes.Read
import type_classes.Unwrap.unwrap
import type_classes.instances.unwrap.given

extension (privmsgTags: PrivmsgTags)
  def getBits: Option[Int] =
    privmsgTags.unwrap.get("bits") map Read[Int].read flatMap (_.toOption)

  def getId: Option[MessageId] =
    privmsgTags.unwrap.get("id") map MessageId.apply

extension (userNoticeTags: UserNoticeTags)
  @targetName("userNoticeTagsGetType")
  def getType: Option[UserNoticeType] =
    userNoticeTags.unwrap.get("msg-id").flatMap {
      case "sub"                 => Some(UserNoticeType.SUB)
      case "resub"               => Some(UserNoticeType.RESUB)
      case "subgift"             => Some(UserNoticeType.SUBGIFT)
      case "giftpaidupgrade"     => Some(UserNoticeType.GIFT_PAID_UPGRADE)
      case "rewardgift"          => Some(UserNoticeType.REWARD_GIFT)
      case "anongiftpaidupgrade" => Some(UserNoticeType.ANON_GIFT_PAID_UPGRADE)
      case "raid"                => Some(UserNoticeType.RAID)
      case "unraid"              => Some(UserNoticeType.UNRAID)
      case "ritual"              => Some(UserNoticeType.RITUAL)
      case "bitsbadgetier"       => Some(UserNoticeType.BITS_BADGE_TIER)
      case _                     => None
    }

  def getLogin: Option[String] =
    userNoticeTags.unwrap.get("login")

extension (noticeTags: NoticeTags)
  @targetName("noticeTagsGetType")
  def getType: Option[NoticeType] =
    noticeTags.unwrap.get("msg-id").flatMap {
      case "already_banned"                     => Some(ALREADY_BANNED)
      case "already_emote_only_off"             => Some(ALREADY_EMOTE_ONLY_OFF)
      case "already_emote_only_on"              => Some(ALREADY_EMOTE_ONLY_ON)
      case "already_followers_off"              => Some(ALREADY_FOLLOWERS_OFF)
      case "already_followers_on"               => Some(ALREADY_FOLLOWERS_ON)
      case "already_r9k_off"                    => Some(ALREADY_R9K_OFF)
      case "already_r9k_on"                     => Some(ALREADY_R9K_ON)
      case "already_slow_off"                   => Some(ALREADY_SLOW_OFF)
      case "already_slow_on"                    => Some(ALREADY_SLOW_ON)
      case "already_subs_off"                   => Some(ALREADY_SUBS_OFF)
      case "already_subs_on"                    => Some(ALREADY_SUBS_ON)
      case "autohost_receive"                   => Some(AUTOHOST_RECEIVE)
      case "bad_ban_admin"                      => Some(BAD_BAN_ADMIN)
      case "bad_ban_anon"                       => Some(BAD_BAN_ANON)
      case "bad_ban_broadcaster"                => Some(BAD_BAN_BROADCASTER)
      case "bad_ban_mod"                        => Some(BAD_BAN_MOD)
      case "bad_ban_self"                       => Some(BAD_BAN_SELF)
      case "bad_ban_staff"                      => Some(BAD_BAN_STAFF)
      case "bad_commercial_error"               => Some(BAD_COMMERCIAL_ERROR)
      case "bad_delete_message_broadcaster"     => Some(BAD_DELETE_MESSAGE_BROADCASTER)
      case "bad_delete_message_mod"             => Some(BAD_DELETE_MESSAGE_MOD)
      case "bad_host_error"                     => Some(BAD_HOST_ERROR)
      case "bad_host_hosting"                   => Some(BAD_HOST_HOSTING)
      case "bad_host_rate_exceeded"             => Some(BAD_HOST_RATE_EXCEEDED)
      case "bad_host_rejected"                  => Some(BAD_HOST_REJECTED)
      case "bad_host_self"                      => Some(BAD_HOST_SELF)
      case "bad_mod_banned"                     => Some(BAD_MOD_BANNED)
      case "bad_mod_mod"                        => Some(BAD_MOD_MOD)
      case "bad_slow_duration"                  => Some(BAD_SLOW_DURATION)
      case "bad_timeout_admin"                  => Some(BAD_TIMEOUT_ADMIN)
      case "bad_timeout_anon"                   => Some(BAD_TIMEOUT_ANON)
      case "bad_timeout_broadcaster"            => Some(BAD_TIMEOUT_BROADCASTER)
      case "bad_timeout_duration"               => Some(BAD_TIMEOUT_DURATION)
      case "bad_timeout_mod"                    => Some(BAD_TIMEOUT_MOD)
      case "bad_timeout_self"                   => Some(BAD_TIMEOUT_SELF)
      case "bad_timeout_staff"                  => Some(BAD_TIMEOUT_STAFF)
      case "bad_unban_no_ban"                   => Some(BAD_UNBAN_NO_BAN)
      case "bad_unhost_error"                   => Some(BAD_UNHOST_ERROR)
      case "bad_unmod_mod"                      => Some(BAD_UNMOD_MOD)
      case "bad_vip_grantee_banned"             => Some(BAD_VIP_GRANTEE_BANNED)
      case "bad_vip_grantee_already_vip"        => Some(BAD_VIP_GRANTEE_ALREADY_VIP)
      case "bad_vip_max_vips_reached"           => Some(BAD_VIP_MAX_VIPS_REACHED)
      case "bad_vip_achievement_incomplete"     => Some(BAD_VIP_ACHIEVEMENT_INCOMPLETE)
      case "bad_unvip_grantee_not_vip"          => Some(BAD_UNVIP_GRANTEE_NOT_VIP)
      case "ban_success"                        => Some(BAN_SUCCESS)
      case "cmds_available"                     => Some(CMDS_AVAILABLE)
      case "color_changed"                      => Some(COLOR_CHANGED)
      case "commercial_success"                 => Some(COMMERCIAL_SUCCESS)
      case "delete_message_success"             => Some(DELETE_MESSAGE_SUCCESS)
      case "delete_staff_message_success"       => Some(DELETE_STAFF_MESSAGE_SUCCESS)
      case "emote_only_off"                     => Some(EMOTE_ONLY_OFF)
      case "emote_only_on"                      => Some(EMOTE_ONLY_ON)
      case "followers_off"                      => Some(FOLLOWERS_OFF)
      case "followers_on"                       => Some(FOLLOWERS_ON)
      case "followers_on_zero"                  => Some(FOLLOWERS_ON_ZERO)
      case "host_off"                           => Some(HOST_OFF)
      case "host_on"                            => Some(HOST_ON)
      case "host_receive"                       => Some(HOST_RECEIVE)
      case "host_receive_no_count"              => Some(HOST_RECEIVE_NO_COUNT)
      case "host_target_went_offline"           => Some(HOST_TARGET_WENT_OFFLINE)
      case "hosts_remaining"                    => Some(HOSTS_REMAINING)
      case "invalid_user"                       => Some(INVALID_USER)
      case "mod_success"                        => Some(MOD_SUCCESS)
      case "msg_banned"                         => Some(MSG_BANNED)
      case "msg_bad_characters"                 => Some(MSG_BAD_CHARACTERS)
      case "msg_channel_blocked"                => Some(MSG_CHANNEL_BLOCKED)
      case "msg_channel_suspended"              => Some(MSG_CHANNEL_SUSPENDED)
      case "msg_duplicate"                      => Some(MSG_DUPLICATE)
      case "msg_emoteonly"                      => Some(MSG_EMOTEONLY)
      case "msg_followersonly"                  => Some(MSG_FOLLOWERSONLY)
      case "msg_followersonly_followed"         => Some(MSG_FOLLOWERSONLY_FOLLOWED)
      case "msg_followersonly_zero"             => Some(MSG_FOLLOWERSONLY_ZERO)
      case "msg_r9k"                            => Some(MSG_R9K)
      case "msg_ratelimit"                      => Some(MSG_RATELIMIT)
      case "msg_rejected"                       => Some(MSG_REJECTED)
      case "msg_rejected_mandatory"             => Some(MSG_REJECTED_MANDATORY)
      case "msg_requires_verified_phone_number" => Some(MSG_REQUIRES_VERIFIED_PHONE_NUMBER)
      case "msg_slowmode"                       => Some(MSG_SLOWMODE)
      case "msg_subsonly"                       => Some(MSG_SUBSONLY)
      case "msg_suspended"                      => Some(MSG_SUSPENDED)
      case "msg_timedout"                       => Some(MSG_TIMEDOUT)
      case "msg_verified_email"                 => Some(MSG_VERIFIED_EMAIL)
      case "no_help"                            => Some(NO_HELP)
      case "no_mods"                            => Some(NO_MODS)
      case "no_vips"                            => Some(NO_VIPS)
      case "not_hosting"                        => Some(NOT_HOSTING)
      case "no_permission"                      => Some(NO_PERMISSION)
      case "r9k_off"                            => Some(R9K_OFF)
      case "r9k_on"                             => Some(R9K_ON)
      case "raid_error_already_raiding"         => Some(RAID_ERROR_ALREADY_RAIDING)
      case "raid_error_forbidden"               => Some(RAID_ERROR_FORBIDDEN)
      case "raid_error_self"                    => Some(RAID_ERROR_SELF)
      case "raid_error_too_many_viewers"        => Some(RAID_ERROR_TOO_MANY_VIEWERS)
      case "raid_error_unexpected"              => Some(RAID_ERROR_UNEXPECTED)
      case "raid_notice_mature"                 => Some(RAID_NOTICE_MATURE)
      case "raid_notice_restricted_chat"        => Some(RAID_NOTICE_RESTRICTED_CHAT)
      case "room_mods"                          => Some(ROOM_MODS)
      case "slow_off"                           => Some(SLOW_OFF)
      case "slow_on"                            => Some(SLOW_ON)
      case "subs_off"                           => Some(SUBS_OFF)
      case "subs_on"                            => Some(SUBS_ON)
      case "timeout_no_timeout"                 => Some(TIMEOUT_NO_TIMEOUT)
      case "timeout_success"                    => Some(TIMEOUT_SUCCESS)
      case "tos_ban"                            => Some(TOS_BAN)
      case "turbo_only_color"                   => Some(TURBO_ONLY_COLOR)
      case "unavailable_command"                => Some(UNAVAILABLE_COMMAND)
      case "unban_success"                      => Some(UNBAN_SUCCESS)
      case "unmod_success"                      => Some(UNMOD_SUCCESS)
      case "unraid_error_no_active_raid"        => Some(UNRAID_ERROR_NO_ACTIVE_RAID)
      case "unraid_error_unexpected"            => Some(UNRAID_ERROR_UNEXPECTED)
      case "unraid_success"                     => Some(UNRAID_SUCCESS)
      case "unrecognized_cmd"                   => Some(UNRECOGNIZED_CMD)
      case "untimeout_banned"                   => Some(UNTIMEOUT_BANNED)
      case "untimeout_success"                  => Some(UNTIMEOUT_SUCCESS)
      case "unvip_success"                      => Some(UNVIP_SUCCESS)
      case "usage_ban"                          => Some(USAGE_BAN)
      case "usage_clear"                        => Some(USAGE_CLEAR)
      case "usage_color"                        => Some(USAGE_COLOR)
      case "usage_commercial"                   => Some(USAGE_COMMERCIAL)
      case "usage_disconnect"                   => Some(USAGE_DISCONNECT)
      case "usage_delete"                       => Some(USAGE_DELETE)
      case "usage_emote_only_off"               => Some(USAGE_EMOTE_ONLY_OFF)
      case "usage_emote_only_on"                => Some(USAGE_EMOTE_ONLY_ON)
      case "usage_followers_off"                => Some(USAGE_FOLLOWERS_OFF)
      case "usage_followers_on"                 => Some(USAGE_FOLLOWERS_ON)
      case "usage_help"                         => Some(USAGE_HELP)
      case "usage_host"                         => Some(USAGE_HOST)
      case "usage_marker"                       => Some(USAGE_MARKER)
      case "usage_me"                           => Some(USAGE_ME)
      case "usage_mod"                          => Some(USAGE_MOD)
      case "usage_mods"                         => Some(USAGE_MODS)
      case "usage_r9k_off"                      => Some(USAGE_R9K_OFF)
      case "usage_r9k_on"                       => Some(USAGE_R9K_ON)
      case "usage_raid"                         => Some(USAGE_RAID)
      case "usage_slow_off"                     => Some(USAGE_SLOW_OFF)
      case "usage_slow_on"                      => Some(USAGE_SLOW_ON)
      case "usage_subs_off"                     => Some(USAGE_SUBS_OFF)
      case "usage_subs_on"                      => Some(USAGE_SUBS_ON)
      case "usage_timeout"                      => Some(USAGE_TIMEOUT)
      case "usage_unban"                        => Some(USAGE_UNBAN)
      case "usage_unhost"                       => Some(USAGE_UNHOST)
      case "usage_unmod"                        => Some(USAGE_UNMOD)
      case "usage_unraid"                       => Some(USAGE_UNRAID)
      case "usage_untimeout"                    => Some(USAGE_UNTIMEOUT)
      case "usage_unvip"                        => Some(USAGE_UNVIP)
      case "usage_user"                         => Some(USAGE_USER)
      case "usage_vip"                          => Some(USAGE_VIP)
      case "usage_vips"                         => Some(USAGE_VIPS)
      case "usage_whisper"                      => Some(USAGE_WHISPER)
      case "vip_success"                        => Some(VIP_SUCCESS)
      case "vips_success"                       => Some(VIPS_SUCCESS)
      case "whisper_banned"                     => Some(WHISPER_BANNED)
      case "whisper_banned_recipient"           => Some(WHISPER_BANNED_RECIPIENT)
      case "whisper_invalid_login"              => Some(WHISPER_INVALID_LOGIN)
      case "whisper_invalid_self"               => Some(WHISPER_INVALID_SELF)
      case "whisper_limit_per_min"              => Some(WHISPER_LIMIT_PER_MIN)
      case "whisper_limit_per_sec"              => Some(WHISPER_LIMIT_PER_SEC)
      case "whisper_restricted"                 => Some(WHISPER_RESTRICTED)
      case "Whisper_restricted_recipient"       => Some(WHISPER_RESTRICTED_RECIPIENT)
      case _                                    => None
    }
